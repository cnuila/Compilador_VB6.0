/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paquetePrincipal;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.StringReader;
import java.util.ArrayList;

/**
 *
 * @author cnuila
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
                try {
                    Lexer scanner = new Lexer(new FileReader("/home/cnuila/Documents/Compiladores/Compilador_VB6.0/src/paquetePrincipal/entrada.txt"));
                    parser miParser = new parser(scanner);
                    miParser.parse();
                    String formato = "edge [color=blue];"+ hacerDFS(miParser.raiz);
                    System.out.println(formato);
                    miParser.raiz.exportarArbol(formato, "AST");
                } catch (Exception e) {
                    System.out.println(e);
                }
            }
        });
    }    

    public static String hacerDFS(Nodo node){
        ArrayList<String> recorrido = new ArrayList<>();
        DFS(node, recorrido);
        DFSAristas(node, node.getIdNodo(), recorrido);
        String formato = "";
        for (int i = 0; i < recorrido.size();i++){
            formato+=recorrido.get(i);
        }
        return formato;
    }
    

    public static void DFS(Nodo node, ArrayList<String> recorrido) {
        if(!node.getEtiqueta().equals("VACIO")){
            recorrido.add(node.toString());
        }        
        for (int i = 0; i < node.getHijos().size(); i++) {
            DFS(node.getHijos().get(i),recorrido);
        }
    }

    public static void DFSAristas(Nodo node,int padre, ArrayList<String> recorrido) {
        if(node.getIdNodo() != padre){
            if(!node.getEtiqueta().equals("VACIO")){
                recorrido.add(padre+"->"+node.getIdNodo()+";");
            }            
        }        
        for (int i = 0; i < node.getHijos().size(); i++) {
            DFSAristas(node.getHijos().get(i),node.getIdNodo(), recorrido);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
